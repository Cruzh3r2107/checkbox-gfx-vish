id: levelzerobins
plugin: resource
command:
    echo 'binname: test_api_tracing'
    echo 'command: sudo /usr/local/checkbox-gfx/test_api_tracing'
    echo
    echo 'binname: test_sysman_events'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_events'
    echo
    echo 'binname: test_ipc_p2p_memory'
    echo 'command: sudo /usr/local/checkbox-gfx/test_ipc_p2p_memory'
    echo
    echo 'binname: test_sysman_device_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_device_zesinit'
    echo
    echo 'binname: test_usm'
    echo 'command: sudo /usr/local/checkbox-gfx/test_usm'
    echo
    echo 'binname: test_driver_errors'
    echo 'command: sudo /usr/local/checkbox-gfx/test_driver_errors'
    echo
    echo 'binname: test_image'
    echo 'command: sudo /usr/local/checkbox-gfx/test_image'
    echo
    echo 'binname: test_sysman_performance_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_performance_zesinit'
    echo
    echo 'binname: test_sysman_psu'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_psu'
    echo
    echo 'binname: test_ipc_memory'
    echo 'command: sudo /usr/local/checkbox-gfx/test_ipc_memory'
    echo
    echo 'binname: test_init_sysman_before_core'
    echo 'command: sudo /usr/local/checkbox-gfx/test_init_sysman_before_core'
    echo
    echo 'binname: test_ipc_multisubdevice'
    echo 'command: sudo /usr/local/checkbox-gfx/test_ipc_multisubdevice'
    echo
    echo 'binname: test_fence'
    echo 'command: sudo /usr/local/checkbox-gfx/test_fence'
    echo
    echo 'binname: test_sysman_standby_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_standby_zesinit'
    echo
    echo 'binname: test_sysman_diagnostics_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_diagnostics_zesinit'
    echo
    echo 'binname: test_init_sysman_enum_freq_with_core_handle'
    echo 'command: sudo /usr/local/checkbox-gfx/test_init_sysman_enum_freq_with_core_handle'
    echo
    echo 'binname: test_stress_atomics'
    echo 'command: sudo /usr/local/checkbox-gfx/test_stress_atomics'
    echo
    echo 'binname: test_sysman_pci_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_pci_zesinit'
    echo
    echo 'binname: test_sysman_firmware'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_firmware'
    echo
    echo 'binname: test_sysman_ras_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_ras_zesinit'
    echo
    echo 'binname: test_sysman_power'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_power'
    echo
    echo 'binname: ze_peak'
    echo 'command: sudo /usr/local/checkbox-gfx/ze_peak'
    echo
    echo 'binname: test_sysman_ras'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_ras'
    echo
    echo 'binname: test_sysman_device'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_device'
    echo
    echo 'binname: test_mutable_cmdlist'
    echo 'command: sudo /usr/local/checkbox-gfx/test_mutable_cmdlist'
    echo
    echo 'binname: test_sysman_power_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_power_zesinit'
    echo
    echo 'binname: ze_bandwidth'
    echo 'command: sudo /usr/local/checkbox-gfx/ze_bandwidth'
    echo
    echo 'binname: test_sysman_overclocking_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_overclocking_zesinit'
    echo
    echo 'binname: test_sysman_firmware_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_firmware_zesinit'
    echo
    echo 'binname: test_copy'
    echo 'command: sudo /usr/local/checkbox-gfx/test_copy'
    echo
    echo 'binname: test_sysman_diagnostics'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_diagnostics'
    echo
    echo 'binname: test_sysman_pci'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_pci'
    echo
    echo 'binname: test_driver_init_flag_gpu'
    echo 'command: sudo /usr/local/checkbox-gfx/test_driver_init_flag_gpu'
    echo
    echo 'binname: test_ipc_multidevice'
    echo 'command: sudo /usr/local/checkbox-gfx/test_ipc_multidevice'
    echo
    echo 'binname: test_memory_overcommit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_memory_overcommit'
    echo
    echo 'binname: ze_peer'
    echo 'command: sudo /usr/local/checkbox-gfx/ze_peer'
    echo
    echo 'binname: test_stress_memory_allocation'
    echo 'command: sudo /usr/local/checkbox-gfx/test_stress_memory_allocation'
    echo
    echo 'binname: test_pin'
    echo 'command: sudo /usr/local/checkbox-gfx/test_pin'
    echo
    echo 'binname: test_debug_errors'
    echo 'command: sudo /usr/local/checkbox-gfx/test_debug_errors'
    echo
    echo 'binname: test_init_sysman_no_env_with_core_handle'
    echo 'command: sudo /usr/local/checkbox-gfx/test_init_sysman_no_env_with_core_handle'
    echo
    echo 'binname: test_ipc_put_handle'
    echo 'command: sudo /usr/local/checkbox-gfx/test_ipc_put_handle'
    echo
    echo 'binname: test_sysman_engine'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_engine'
    echo
    echo 'binname: test_sysman_events_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_events_zesinit'
    echo
    echo 'binname: test_sampler'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sampler'
    echo
    echo 'binname: test_sysman_fabric'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_fabric'
    echo
    echo 'binname: test_device'
    echo 'command: sudo /usr/local/checkbox-gfx/test_device'
    echo
    echo 'binname: ze_nano'
    echo 'command: sudo /usr/local/checkbox-gfx/ze_nano'
    echo
    echo 'binname: test_sysman_psu_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_psu_zesinit'
    echo
    echo 'binname: test_module'
    echo 'command: sudo /usr/local/checkbox-gfx/test_module'
    echo
    echo 'binname: test_driver_init_flag_vpu'
    echo 'command: sudo /usr/local/checkbox-gfx/test_driver_init_flag_vpu'
    echo
    echo 'binname: test_cmdqueue'
    echo 'command: sudo /usr/local/checkbox-gfx/test_cmdqueue'
    echo
    echo 'binname: test_driver'
    echo 'command: sudo /usr/local/checkbox-gfx/test_driver'
    echo
    echo 'binname: test_context'
    echo 'command: sudo /usr/local/checkbox-gfx/test_context'
    echo
    echo 'binname: ze_pingpong'
    echo 'command: sudo /usr/local/checkbox-gfx/ze_pingpong'
    echo
    echo 'binname: test_sysman_fan'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_fan'
    echo
    echo 'binname: test_driver_init_flag_vpu_gpu'
    echo 'command: sudo /usr/local/checkbox-gfx/test_driver_init_flag_vpu_gpu'
    echo
    echo 'binname: test_cmdlist'
    echo 'command: sudo /usr/local/checkbox-gfx/test_cmdlist'
    echo
    echo 'binname: test_init_sysman_enum_freq_with_sysman_handle'
    echo 'command: sudo /usr/local/checkbox-gfx/test_init_sysman_enum_freq_with_sysman_handle'
    echo
    echo 'binname: test_fabric'
    echo 'command: sudo /usr/local/checkbox-gfx/test_fabric'
    echo
    echo 'binname: test_sysman_scheduler_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_scheduler_zesinit'
    echo
    echo 'binname: test_debug'
    echo 'command: sudo /usr/local/checkbox-gfx/test_debug'
    echo
    echo 'binname: test_metric'
    echo 'command: sudo /usr/local/checkbox-gfx/test_metric'
    echo
    echo 'binname: test_event'
    echo 'command: sudo /usr/local/checkbox-gfx/test_event'
    echo
    echo 'binname: test_template'
    echo 'command: sudo /usr/local/checkbox-gfx/test_template'
    echo
    echo 'binname: test_cmdlist_errors'
    echo 'command: sudo /usr/local/checkbox-gfx/test_cmdlist_errors'
    echo
    echo 'binname: test_api_ltracing'
    echo 'command: sudo /usr/local/checkbox-gfx/test_api_ltracing'
    echo
    echo 'binname: test_p2p'
    echo 'command: sudo /usr/local/checkbox-gfx/test_p2p'
    echo
    echo 'binname: test_sysman_temperature'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_temperature'
    echo
    echo 'binname: test_sysman_standby'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_standby'
    echo
    echo 'binname: test_ipc'
    echo 'command: sudo /usr/local/checkbox-gfx/test_ipc'
    echo
    echo 'binname: test_memory'
    echo 'command: sudo /usr/local/checkbox-gfx/test_memory'
    echo
    echo 'binname: test_sysman_ecc_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_ecc_zesinit'
    echo
    echo 'binname: test_init_sysman'
    echo 'command: sudo /usr/local/checkbox-gfx/test_init_sysman'
    echo
    echo 'binname: test_residency'
    echo 'command: sudo /usr/local/checkbox-gfx/test_residency'
    echo
    echo 'binname: test_init_sysman_after_core'
    echo 'command: sudo /usr/local/checkbox-gfx/test_init_sysman_after_core'
    echo
    echo 'binname: test_cmdqueue_errors'
    echo 'command: sudo /usr/local/checkbox-gfx/test_cmdqueue_errors'
    echo
    echo 'binname: test_sysman_temperature_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_temperature_zesinit'
    echo
    echo 'binname: test_device_errors'
    echo 'command: sudo /usr/local/checkbox-gfx/test_device_errors'
    echo
    echo 'binname: test_sysman_fabric_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_fabric_zesinit'
    echo
    echo 'binname: test_sysman_led'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_led'
    echo
    echo 'binname: test_multithread'
    echo 'command: sudo /usr/local/checkbox-gfx/test_multithread'
    echo
    echo 'binname: test_sysman_memory'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_memory'
    echo
    echo 'binname: ze_image_copy'
    echo 'command: sudo /usr/local/checkbox-gfx/ze_image_copy'
    echo
    echo 'binname: test_sysman_fan_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_fan_zesinit'
    echo
    echo 'binname: test_stress_misc'
    echo 'command: sudo /usr/local/checkbox-gfx/test_stress_misc'
    echo
    echo 'binname: test_module_errors'
    echo 'command: sudo /usr/local/checkbox-gfx/test_module_errors'
    echo
    echo 'binname: test_metric_tracer_and_programmable'
    echo 'command: sudo /usr/local/checkbox-gfx/test_metric_tracer_and_programmable'
    echo
    echo 'binname: test_metric_errors'
    echo 'command: sudo /usr/local/checkbox-gfx/test_metric_errors'
    echo
    echo 'binname: test_driver_init_flag_none'
    echo 'command: sudo /usr/local/checkbox-gfx/test_driver_init_flag_none'
    echo
    echo 'binname: test_sysman_engine_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_engine_zesinit'
    echo
    echo 'binname: test_zesdevice_errors'
    echo 'command: sudo /usr/local/checkbox-gfx/test_zesdevice_errors'
    echo
    echo 'binname: test_sysman_memory_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_memory_zesinit'
    echo
    echo 'binname: test_sysman_performance'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_performance'
    echo
    echo 'binname: test_sysman_ecc'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_ecc'
    echo
    echo 'binname: test_multiprocess'
    echo 'command: sudo /usr/local/checkbox-gfx/test_multiprocess'
    echo
    echo 'binname: test_barrier'
    echo 'command: sudo /usr/local/checkbox-gfx/test_barrier'
    echo
    echo 'binname: test_handle_tracking_errors'
    echo 'command: sudo /usr/local/checkbox-gfx/test_handle_tracking_errors'
    echo
    echo 'binname: test_sysman_led_zesinit'
    echo 'command: sudo /usr/local/checkbox-gfx/test_sysman_led_zesinit'
    echo

id: levelzeroraytracingtests
plugin: resource
command:
    echo 'testname: embree_rthwif_cornell_box'
    echo 'command: embree_rthwif_cornell_box --default-rtas-builder --compare cornell_box_reference.tga'
    echo
    echo 'testname: rthwif_test_builder_triangles_expected'
    echo 'command: embree_rthwif_test --default-rtas-builder --build_test_triangles --build_mode_expected'
    echo
    echo 'testname: rthwif_test_builder_procedurals_expected'
    echo 'command: embree_rthwif_test --default-rtas-builder --build_test_procedurals --build_mode_expected'
    echo
    echo 'testname: rthwif_test_builder_instances_expected'
    echo 'command: embree_rthwif_test --default-rtas-builder --build_test_instances --build_mode_expected'
    echo
    echo 'testname: rthwif_test_builder_mixed_expected'
    echo 'command: embree_rthwif_test --default-rtas-builder --build_test_mixed --build_mode_expected'
    echo
    echo 'testname: rthwif_test_benchmark_triangles'
    echo 'command: embree_rthwif_test --default-rtas-builder --benchmark_triangles'
    echo
    echo 'testname: rthwif_test_benchmark_procedurals'
    echo 'command: embree_rthwif_test --default-rtas-builder --benchmark_procedurals'
    echo
    echo 'testname: rthwif_test_builder_triangles_worst_case'
    echo 'command: embree_rthwif_test --default-rtas-builder --build_test_triangles --build_mode_worst_case'
    echo
    echo 'testname: rthwif_test_builder_procedurals_worst_case'
    echo 'command: embree_rthwif_test --default-rtas-builder --build_test_procedurals --build_mode_worst_case'
    echo
    echo 'testname: rthwif_test_builder_instances_worst_case'
    echo 'command: embree_rthwif_test --default-rtas-builder --build_test_instances --build_mode_worst_case'
    echo
    echo 'testname: rthwif_test_builder_mixed_worst_case'
    echo 'command: embree_rthwif_test --default-rtas-builder --build_test_mixed --build_mode_worst_case'
    echo
    echo 'testname: rthwif_test_triangles_committed_hit'
    echo 'command: embree_rthwif_test --default-rtas-builder --no-instancing --triangles-committed-hit'
    echo
    echo 'testname: rthwif_test_triangles_potential_hit'
    echo 'command: embree_rthwif_test --default-rtas-builder --no-instancing --triangles-potential-hit'
    echo
    echo 'testname: rthwif_test_triangles_anyhit_shader_commit'
    echo 'command: embree_rthwif_test --default-rtas-builder --no-instancing --triangles-anyhit-shader-commit'
    echo
    echo 'testname: rthwif_test_triangles_anyhit_shader_reject'
    echo 'command: embree_rthwif_test --default-rtas-builder --no-instancing --triangles-anyhit-shader-reject'
    echo
    echo 'testname: rthwif_test_procedurals_committed_hit'
    echo 'command: embree_rthwif_test --default-rtas-builder --no-instancing --procedurals-committed-hit'
    echo
    echo 'testname: rthwif_test_hwinstancing_triangles_committed_hit'
    echo 'command: embree_rthwif_test --default-rtas-builder --hw-instancing --triangles-committed-hit'
    echo
    echo 'testname: rthwif_test_hwinstancing_triangles_potential_hit'
    echo 'command: embree_rthwif_test --default-rtas-builder --hw-instancing --triangles-potential-hit'
    echo
    echo 'testname: rthwif_test_hwinstancing_triangles_anyhit_shader_commit'
    echo 'command: embree_rthwif_test --default-rtas-builder --hw-instancing --triangles-anyhit-shader-commit'
    echo
    echo 'testname: rthwif_test_hwinstancing_procedurals_committed_hit'
    echo 'command: embree_rthwif_test --default-rtas-builder --hw-instancing --procedurals-committed-hit'
    echo
    echo 'testname: rthwif_test_swinstancing_triangles_committed_hit'
    echo 'command: embree_rthwif_test --default-rtas-builder --sw-instancing --triangles-committed-hit'
    echo
    echo 'testname: rthwif_test_swinstancing_triangles_potential_hit'
    echo 'command: embree_rthwif_test --default-rtas-builder --sw-instancing --triangles-potential-hit'
    echo
    echo 'testname: rthwif_test_swinstancing_triangles_anyhit_shader_commit'
    echo 'command: embree_rthwif_test --default-rtas-builder --sw-instancing --triangles-anyhit-shader-commit'
    echo
    echo 'testname: rthwif_test_swinstancing_triangles_anyhit_shader_reject'
    echo 'command: embree_rthwif_test --default-rtas-builder --sw-instancing --triangles-anyhit-shader-reject'
    echo
    echo 'testname: rthwif_test_swinstancing_procedurals_committed_hit'
    echo 'command: embree_rthwif_test --default-rtas-builder --sw-instancing --procedurals-committed-hit'
    echo

id: crucibletests
plugin: resource
command:
    echo 'testgroup: stencil-triangles'
    echo 'filter: func.depthstencil.stencil-triangles.clear-0x17.ref-0x17.*'
    echo
    echo 'testgroup: aspect-stencil'
    echo 'filter: func.miptree.s8-uint.aspect-stencil.view-2d.levels02.*'
    echo
    echo 'testgroup: aspect-depth'
    echo 'filter: func.miptree.d32-sfloat.aspect-depth.*'
    echo
    echo 'testgroup: r8g8b8a8-aspect-color'
    echo 'filter: func.miptree.r8g8b8a8-unorm.aspect-color.*'
    echo
    echo 'testgroup: bc3-aspect-color'
    echo 'filter: func.miptree.bc3-unorm.aspect-color.*'
    echo
    echo 'testgroup: bench'
    echo 'filter: bench.*'
    echo
    echo 'testgroup: bug'
    echo 'filter: bug.*'
    echo
    echo 'testgroup: depthstencil'
    echo 'filter: func.depthstencil.*'
    echo
    echo 'testgroup: desc'
    echo 'filter: func.desc.*'
    echo
    echo 'testgroup: draw'
    echo 'filter: func.draw*'
    echo
    echo 'testgroup: gs-basic'
    echo 'filter: func.gs.basic'
    echo
    echo 'testgroup: first'
    echo 'filter: func.first'
    echo
    echo 'testgroup: compute'
    echo 'filter: func.compute.*'
    echo
    echo 'testgroup: shader'
    echo 'filter: func.shader.*'
    echo
    echo 'testgroup: issue'
    echo 'filter: func.issue*'
    echo
    echo 'testgroup: mesh'
    echo 'filter: func.mesh.*'
    echo
    echo 'testgroup: example'
    echo 'filter: example.*'
    echo
    echo 'testgroup: buffer'
    echo 'filter: func.buffer.*'
    echo
    echo 'testgroup: cmd-buffer'
    echo 'filter: func.cmd-buffer.*'
    echo
    echo 'testgroup: copy'
    echo 'filter: func.copy.*'
    echo
    echo 'testgroup: event'
    echo 'filter: func.event.*'
    echo
    echo 'testgroup: query'
    echo 'filter: func.query.*'
    echo
    echo 'testgroup: interleaved-cmd-buffers'
    echo 'filter: func.interleaved-cmd-buffers.*'
    echo
    echo 'testgroup: memory_budget'
    echo 'filter: func.memory_budget'
    echo
    echo 'testgroup: renderpass'
    echo 'filter: func.renderpass.*'
    echo
    echo 'testgroup: memory-fd'
    echo 'filter: func.memory-fd.*'
    echo
    echo 'testgroup: stress'
    echo 'filter: stress.*'
    echo
    echo 'testgroup: self'
    echo 'filter: self.*'
    echo
    echo 'testgroup: calibrated-timestamps'
    echo 'filter: func.calibrated-timestamps.*'
    echo
    echo 'testgroup: sync'
    echo 'filter: func.sync.*
    echo

id: vkconformancetests
plugin: resource
command:
    echo 'testgroup: api'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/api.txt'
    echo
    echo 'testgroup: binding-model'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/binding-model.txt'
    echo
    echo 'testgroup: clipping'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/clipping.txt'
    echo
    echo 'testgroup: compute'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/compute.txt'
    echo
    echo 'testgroup: conditional-rendering'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/conditional-rendering.txt'
    echo
    echo 'testgroup: depth'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/depth.txt'
    echo
    echo 'testgroup: descriptor-indexing'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/descriptor-indexing.txt'
    echo
    echo 'testgroup: device-group'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/device-group.txt'
    echo
    echo 'testgroup: dgc'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/dgc.txt'
    echo
    echo 'testgroup: draw'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/draw.txt'
    echo
    echo 'testgroup: drm-format-modifiers'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/drm-format-modifiers.txt'
    echo
    echo 'testgroup: dynamic-rendering'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/dynamic-rendering.txt'
    echo
    echo 'testgroup: dynamic-state'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/dynamic-state.txt'
    echo
    echo 'testgroup: fragment-operations'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/fragment-operations.txt'
    echo
    echo 'testgroup: fragment-shader-interlock'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/fragment-shader-interlock.txt'
    echo
    echo 'testgroup: fragment-shading-barycentric'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/fragment-shading-barycentric.txt'
    echo
    echo 'testgroup: fragment-shading-rate'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/fragment-shading-rate.txt'
    echo
    echo 'testgroup: geometry'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/geometry.txt'
    echo
    echo 'testgroup: glsl'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/glsl.txt'
    echo
    echo 'testgroup: graphicsfuzz'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/graphicsfuzz.txt'
    echo
    echo 'testgroup: image/astc-decode-mode'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/astc-decode-mode.txt'
    echo
    echo 'testgroup: image/atomic-operations'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/atomic-operations.txt'
    echo
    echo 'testgroup: image/concurrent-copy'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/concurrent-copy.txt'
    echo
    echo 'testgroup: image/depth-stencil-descriptor'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/depth-stencil-descriptor.txt'
    echo
    echo 'testgroup: image/depth-stencil-separate-access'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/depth-stencil-separate-access.txt'
    echo
    echo 'testgroup: image/device-scope-access'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/device-scope-access.txt'
    echo
    echo 'testgroup: image/extend-operands-spirv1p4'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/extend-operands-spirv1p4.txt'
    echo
    echo 'testgroup: image/extended-usage-bit'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/extended-usage-bit.txt'
    echo
    echo 'testgroup: image/extended-usage-bit-compatibility'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/extended-usage-bit-compatibility.txt'
    echo
    echo 'testgroup: image/format-reinterpret'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/format-reinterpret.txt'
    echo
    echo 'testgroup: image/host-image-copy'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/host-image-copy.txt'
    echo
    echo 'testgroup: image/image-size'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/image-size.txt'
    echo
    echo 'testgroup: image/load-store'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/load-store.txt'
    echo
    echo 'testgroup: image/load-store-lod'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/load-store-lod.txt'
    echo
    echo 'testgroup: image/load-store-multisample'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/load-store-multisample.txt'
    echo
    echo 'testgroup: image/misaligned-cube'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/misaligned-cube.txt'
    echo
    echo 'testgroup: image/mismatched-formats'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/mismatched-formats.txt'
    echo
    echo 'testgroup: image/mismatched-write-op'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/mismatched-write-op.txt'
    echo
    echo 'testgroup: image/mutable'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/mutable.txt'
    echo
    echo 'testgroup: image/nontemporal-operand'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/nontemporal-operand.txt'
    echo
    echo 'testgroup: image/qualifiers'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/qualifiers.txt'
    echo
    echo 'testgroup: image/queue-transfer'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/queue-transfer.txt'
    echo
    echo 'testgroup: image/sample-cubemap'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/sample-cubemap.txt'
    echo
    echo 'testgroup: image/sample-texture'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/sample-texture.txt'
    echo
    echo 'testgroup: image/store'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/store.txt'
    echo
    echo 'testgroup: image/subresource-layout'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/subresource-layout.txt'
    echo
    echo 'testgroup: image/swapchain-mutable'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/swapchain-mutable.txt'
    echo
    echo 'testgroup: image/texel-view-compatible'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/image/texel-view-compatible.txt'
    echo
    echo 'testgroup: imageless-framebuffer'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/imageless-framebuffer.txt'
    echo
    echo 'testgroup: info'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/info.txt'
    echo
    echo 'testgroup: memory'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/memory.txt'
    echo
    echo 'testgroup: memory-model'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/memory-model.txt'
    echo
    echo 'testgroup: mesh-shader'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/mesh-shader.txt'
    echo
    echo 'testgroup: multiview'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/multiview.txt'
    echo
    echo 'testgroup: pipeline/fast-linked-library'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/pipeline/fast-linked-library.txt'
    echo
    echo 'testgroup: pipeline/monolithic'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/pipeline/monolithic.txt'
    echo
    echo 'testgroup: pipeline/pipeline-library'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/pipeline/pipeline-library.txt'
    echo
    echo 'testgroup: pipeline/shader-object-linked-binary'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/pipeline/shader-object-linked-binary.txt'
    echo
    echo 'testgroup: pipeline/shader-object-linked-spirv'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/pipeline/shader-object-linked-spirv.txt'
    echo
    echo 'testgroup: pipeline/shader-object-unlinked-binary'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/pipeline/shader-object-unlinked-binary.txt'
    echo
    echo 'testgroup: pipeline/shader-object-unlinked-spirv'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/pipeline/shader-object-unlinked-spirv.txt'
    echo
    echo 'testgroup: protected-memory'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/protected-memory.txt'
    echo
    echo 'testgroup: query-pool'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/query-pool.txt'
    echo
    echo 'testgroup: rasterization'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/rasterization.txt'
    echo
    echo 'testgroup: ray-query'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/ray-query.txt'
    echo
    echo 'testgroup: ray-tracing-pipeline'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/ray-tracing-pipeline.txt'
    echo
    echo 'testgroup: reconvergence'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/reconvergence.txt'
    echo
    echo 'testgroup: renderpass'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/renderpass.txt'
    echo
    echo 'testgroup: renderpass2'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/renderpass2.txt'
    echo
    echo 'testgroup: robustness'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/robustness.txt'
    echo
    echo 'testgroup: shader-object/api'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/shader-object/api.txt'
    echo
    echo 'testgroup: shader-object/binary'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/shader-object/binary.txt'
    echo
    echo 'testgroup: shader-object/binding'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/shader-object/binding.txt'
    echo
    echo 'testgroup: shader-object/create'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/shader-object/create.txt'
    echo
    echo 'testgroup: shader-object/link'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/shader-object/link.txt'
    echo
    echo 'testgroup: shader-object/misc'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/shader-object/misc.txt'
    echo
    echo 'testgroup: shader-object/pipeline-interaction'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/shader-object/pipeline-interaction.txt'
    echo
    echo 'testgroup: shader-object/rendering'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/shader-object/rendering.txt'
    echo
    echo 'testgroup: sparse-resources'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/sparse-resources.txt'
    echo
    echo 'testgroup: spirv-assembly'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/spirv-assembly.txt'
    echo
    echo 'testgroup: ssbo'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/ssbo.txt'
    echo
    echo 'testgroup: subgroups'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/subgroups.txt'
    echo
    echo 'testgroup: synchronization'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/synchronization.txt'
    echo
    echo 'testgroup: synchronization2'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/synchronization2.txt'
    echo
    echo 'testgroup: tessellation'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/tessellation.txt'
    echo
    echo 'testgroup: texture'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/texture.txt'
    echo
    echo 'testgroup: transform-feedback'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/transform-feedback.txt'
    echo
    echo 'testgroup: ubo'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/ubo.txt'
    echo
    echo 'testgroup: video'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/video.txt'
    echo
    echo 'testgroup: wsi'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/wsi.txt'
    echo
    echo 'testgroup: ycbcr'
    echo 'testfile: /usr/local/checkbox-gfx/VK-GL-CTS/external/vulkancts/mustpass/main/vk-default/ycbcr.txt'
    echo

id: glconformancetests
plugin: resource
command:
    echo 'testgroup: info'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.info.*'
    echo
    echo 'testgroup: shaders'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.shaders.*'
    echo
    echo 'testgroup: geometry_shader'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.geometry_shader.*'
    echo
    echo 'testgroup: gpu_shader5'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.gpu_shader5.*'
    echo
    echo 'testgroup: tessellation_shader'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.tessellation_shader.*'
    echo
    echo 'testgroup: texture_cube_map_array'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.texture_cube_map_array.*'
    echo
    echo 'testgroup: texture_border_clamp'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.texture_border_clamp.*'
    echo
    echo 'testgroup: texture_buffer'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.texture_buffer.*'
    echo
    echo 'testgroup: draw_buffers_indexed'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.draw_buffers_indexed.*'
    echo
    echo 'testgroup: constant_expressions'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.constant_expressions.*'
    echo
    echo 'testgroup: shader_macros'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.shader_macros.*'
    echo
    echo 'testgroup: separable_programs_tf'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.separable_programs_tf.*'
    echo
    echo 'testgroup: copy_image'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.copy_image.*'
    echo
    echo 'testgroup: texture2d'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.internalformat.texture2d.*'
    echo
    echo 'testgroup: copy_tex_image'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.internalformat.copy_tex_image.*'
    echo
    echo 'testgroup: renderbuffer'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.internalformat.renderbuffer.*'
    echo
    echo 'testgroup: ext_texture_shadow_lod'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.ext_texture_shadow_lod.*'
    echo
    echo 'testgroup: nearest_edge'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.nearest_edge.*'
    echo
    echo 'testgroup: framebuffer_completeness'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.framebuffer_completeness.*'
    echo
    echo 'testgroup: texture_compatibility'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.texture_compatibility.*'
    echo
    echo 'testgroup: compressed_format'
    echo 'openglvariant: GLES3.2'
    echo 'testfilter: KHR-GLES32.core.compressed_format.*'
    echo

unit: template
template-resource: levelzerobins
template-filter: levelzerobins.binname != ''
template-engine: jinja2
template-unit: job
id: gfx_level_zero_{{ binname }}
category_id: level-zero
flags: simple
user: root
_summary: Run the {{ binname }} test from level zero tests
environ:
  # necessary for local mode
  XDG_SESSION_TYPE
  XDG_RUNTIME_DIR
  NORMAL_USER
requires: cpuinfo.type == 'GenuineIntel'
estimated_duration: 1m
command:
  echo "{{ command }}"
  (cd /usr/local/checkbox-gfx; {{ command }})

unit: template
template-resource: levelzeroraytracingtests
template-filter: levelzeroraytracingtests.testname != ''
template-engine: jinja2
template-unit: job
id: gfx_level_zero_rt_{{ testname }}
category_id: level-zero-raytracing
flags: simple
user: root
_summary: Run the {{ testname }} test from level zero tests
requires: cpuinfo.type == 'GenuineIntel'
environ:
  # necessary for local mode
  XDG_SESSION_TYPE
  XDG_RUNTIME_DIR
  NORMAL_USER
estimated_duration: 1m
command:
  SYCL_BUNDLE_ROOT=/usr/local/checkbox-gfx/sycl_linux/
  PATH=$PATH:$SYCL_BUNDLE_ROOT/../level-zero-raytracing-support/build/
  LD_LIBRARY_PATH=$SYCL_BUNDLE_ROOT/lib:$LD_LIBRARY_PATH
  LD_LIBRARY_PATH=$SYCL_BUNDLE_ROOT/linux/lib/x64:$LD_LIBRARY_PATH
  LD_LIBRARY_PATH=$SYCL_BUNDLE_ROOT/lib/oclgpu:$LD_LIBRARY_PATH
  echo "{{ command }}"
  {{ command }}

unit: template
template-resource: crucibletests
template-filter: crucibletests.testgroup != ''
template-engine: jinja2
template-unit: job 
id: gfx_mesa_crucible_{{ testgroup }}
category_id: mesa
flags: simple
user: root
_summary: Run the {{ testgroup }} test from crucible tests
environ: 
  # necessary for local mode
  XDG_SESSION_TYPE 
  XDG_RUNTIME_DIR
estimated_duration: 1m
command: 
  # --fork is used because the documentation indicates that it will prevent 
  # individual tests from crashing the main thread. Remove it if debugging
  (cd /usr/local/checkbox-gfx/crucible; XDG_RUNTIME_DIR=/run/user/1000 ./bin/crucible run --fork '{{ filter }}' > /tmp/crucible_{{ testgroup }}_out.txt)
  cat /tmp/crucible_{{ testgroup }}_out.txt
  # This is a workaround for the fact that crucible ls-tests shows top-level tests such as
  # func.depthstencil.stencil-triangles.clear-0x17.ref-0x17.compare-op-always.pass-op-zero.fail-op-invert
  # but the test has multiple versions (.q0, .q1, .q2), which will return an error if
  # run together, even if they do not return an error when running separately
  # with the same result. So this just runs everything together and checks to
  # see if the output mentions any failed tests. 
  if(grep "crucible: info   : fail 0" /tmp/crucible_{{ testgroup }}_out.txt); then
    echo "The test indicates no test failures. Passing test!"
    rm /tmp/crucible_{{ testgroup }}_out.txt
    exit 0
  fi
  >&2 echo "Non-zero test failure value. Test failed!"
  rm /tmp/crucible_{{ testgroup }}_out.txt
  exit 1

unit: template
template-resource: vkconformancetests
template-filter: vkconformancetests.testgroup != ''
template-engine: jinja2
template-unit: job
id: gfx_mesa_vk_{{ testgroup }}
category_id: mesa
flags: simple
user: root
_summary: Run the {{ testgroup }} tests from VK-GL-CTS
environ:
  # necessary for local mode
  XDG_SESSION_TYPE
  XDG_RUNTIME_DIR
estimated_duration: 1m
command:
  cd /usr/local/checkbox-gfx/VK-GL-CTS/build; ./external/vulkancts/modules/vulkan/deqp-vk --deqp-caselist-file={{ testfile }}

plugin: resource
id: gfx_mesa_gl_hw_render
category_id: mesa
user: root
requires:
  package.name == 'mesa-utils'
_summary: Checks for HW render for OpenGL
environ: 
  # necessary for local mode
  XDG_SESSION_TYPE 
  XDG_RUNTIME_DIR
estimated_duration: 1
command:
  RENDERER=$(glxinfo | grep "OpenGL renderer string" | grep "Mesa Intel")
  if [ -z "$RENDERER" ]; then
    echo "FAIL: Renderer appears to be software based"
    exit 1
  fi
  echo "PASS: Using HW rendering"
  exit 0

unit: template
template-resource: glconformancetests
template-filter: glconformancetests.testgroup != ''
template-engine: jinja2
template-unit: job 
id: gfx_mesa_gl_{{ openglvariant }}_{{ testgroup }}
category_id: mesa
depends: gfx_mesa_gl_hw_render
flags: simple
user: root
_summary: Run the {{ testgroup }} {{ openglvariant }} tests from VK-GL-CTS
environ: 
  # necessary for local mode
  XDG_SESSION_TYPE
  XDG_RUNTIME_DIR
estimated_duration: 1m
command:
  cd /usr/local/checkbox-gfx/VK-GL-CTS/build/external/openglcts/modules; ./glcts --deqp-surface-type=fbo --deqp-case={{ testfilter }}
